!is.na(residue),
tag_onp_hotspot(
Hugo_Symbol,
Variant_Type,
Variant_Classification %in% truncating_mutations,
as.numeric(start_residue),
as.numeric(end_residue),
variant_length
),
FALSE),
threeD_hotspot = ifelse(Variant_Type %in% c('SNP', 'DNP') &
Variant_Classification %in% coding_mutations & !is.na(residue),
str_c(Hugo_Symbol, residue) %in% hotspots$tag[hotspots$threeD_hotspot == T],
FALSE),
indel_hotspot_type = ifelse(Variant_Classification %like% 'In_Frame',
tag_indel_hotspot(Hugo_Symbol,
HGVSp_Short,
as.numeric(start_residue),
as.numeric(end_residue),
variant_length),
'none'),
indel_hotspot = indel_hotspot_type != 'none',
Hotspot = snv_hotspot == T | indel_hotspot == T)
maf
}
hotspots = map_dfr(hotspot_files, function(x) {
fread(x) %>%
mutate(source = x,
Type = if('Type' %in% names(.)) { Type } else { 'single residue' },
Class = if('Class' %in% names(.)) { Class } else { 'single residue' },
false_positive = if('false_positive' %in% names(.)) { false_positive } else { FALSE },
previous_mutations = if('previous_mutations' %in% names(.)) { previous_mutations } else { str_replace_all(Variants, ':[0-9]+\\|?', ',') })
}) %>%
mutate(indel_hotspot = Type == 'in-frame indel',
indel_hotspot = ifelse(is.na(indel_hotspot), FALSE, indel_hotspot),
threeD_hotspot = ifelse(Class %in% c('Hotspot-linked', 'Cluster-exclusive'), TRUE, FALSE),
snv_hotspot = source %like% 'NBT|24k' & indel_hotspot == FALSE,
Pos = ifelse(indel_hotspot == F, str_extract(Residue, '(?<=[A-Z])[0-9]+'), NA),
Start = ifelse(indel_hotspot == T, str_extract(Residue, '^[0-9]+(?=-)'), NA),
End = ifelse(indel_hotspot == T, str_extract(Residue, '(?<=-)[0-9]+$'), NA),
Pos = ifelse(indel_hotspot == T & is.na(Start), Residue, Pos)) %>%
replace_na(list(false_positive = FALSE)) %>%
group_by(Gene, Residue, Pos, Start, End) %>%
dplyr::summarize(indel_hotspot = any(indel_hotspot == T, na.rm = T),
snv_hotspot = any(snv_hotspot == T, na.rm = T),
threeD_hotspot = any(threeD_hotspot == T, na.rm = T),
previous_mutations = paste(c(unique(unlist(strsplit(previous_mutations, ',')))), collapse = ','),
false_positive = all(false_positive == T, na.rm = T)) %>%
ungroup() %>%
mutate(tag = str_c(Gene, Pos),
Pos = as.numeric(Pos),
Start = as.numeric(Start),
End = as.numeric(End)) %>%
filter(false_positive == FALSE)
h(hotspots)
hotspots = map_dfr(hotspot_files, function(x) {
fread(x) %>%
mutate(source = x,
Type = if('Type' %in% names(.)) { Type } else { 'single residue' },
Class = if('Class' %in% names(.)) { Class } else { 'single residue' },
false_positive = if('false_positive' %in% names(.)) { false_positive } else { FALSE },
previous_mutations = if('previous_mutations' %in% names(.)) { previous_mutations } else { str_replace_all(Variants, ':[0-9]+\\|?', ',') })
}) %>%
mutate(indel_hotspot = Type == 'in-frame indel',
indel_hotspot = ifelse(is.na(indel_hotspot), FALSE, indel_hotspot),
threeD_hotspot = ifelse(Class %in% c('Hotspot-linked', 'Cluster-exclusive'), TRUE, FALSE),
snv_hotspot = source %like% 'NBT|24k' & indel_hotspot == FALSE,
Pos = ifelse(indel_hotspot == F, str_extract(Residue, '(?<=[A-Z])[0-9]+'), NA),
Start = ifelse(indel_hotspot == T, str_extract(Residue, '^[0-9]+(?=-)'), NA),
End = ifelse(indel_hotspot == T, str_extract(Residue, '(?<=-)[0-9]+$'), NA),
Pos = ifelse(indel_hotspot == T & is.na(Start), Residue, Pos)) %>%
replace_na(list(false_positive = FALSE)) %>%
group_by(Gene, Residue, Pos, Start, End) %>%
dplyr::summarize(indel_hotspot = any(indel_hotspot == T, na.rm = T),
snv_hotspot = any(snv_hotspot == T, na.rm = T),
threeD_hotspot = any(threeD_hotspot == T, na.rm = T),
previous_mutations = paste(c(unique(unlist(strsplit(previous_mutations, ',')))), collapse = ','),
false_positive = all(false_positive == T, na.rm = T)) %>%
ungroup() %>%
mutate(tag = str_c(Gene, Pos),
Pos = as.numeric(Pos),
Start = as.numeric(Start),
End = as.numeric(End)) %>%
filter(false_positive == FALSE) %>%
select(-false_positive)
h(hotspots)
usethis::use_data(hotspots)
roxygen2::roxygenize()
warnings()
roxygen2::roxygenize()
roxygen2::roxygenize()
devtools::check()
roxygen2::roxygenize()
roxygen2::roxygenize()
warnings()
roxygen2::roxygenize()
devtools::check()
??plan
roxygen2::roxygenize()
roxygen2::roxygenize()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::load_all()
warnings
warnings()
warnings
devtools::load_all()
devtools::check()
devtools::document()
devtools::check()
usethis::use_package('dplyr')
usethis::use_package('dplyr')
usethis::use_readme_rmd()
usethis::use_readme_md()
devtools::check()
devtools::check()
?data.table::`%like%`
devtools::check()
devtools::check()
devtools::document()
devtools::check()
maf
maf=fread('/ifs/res/taylorlab/jonssonp/msk_impact_gml_som/data/brca-germline-filtered-all-samples.maf')
write_out(maf, '~/Downloads/tmp_brca.maf')
maf=fread('/ifs/res/taylorlab/jonssonp/msk_impact_gml_som/data/germline-pathogenic-brca-variants-2018-08-30.txt')
source_python(system.file('python', 'brca-exchange-query.py', package = 'annotatemaf'))
#' @export
#' @rdname brca_exchange_annotate_maf
query_brca_exchange = function(gene, start, end, ref, alt) {
if (gene %in% c('BRCA1', 'BRCA2')) {
brca_query(gene, start-1, end+1) %>%
map_dfr(., ~set_names(., c('gene',
'chrom',
'start_position',
'end_position',
'reference_allele',
'alternate_allele',
'id',
'pathogenicity'))) %>%
dplyr::mutate(
start_position = as.numeric(start_position),
end_position = as.numeric(end_position),
variant_type = case_when(
str_sub(reference_allele, 1, 1) == str_sub(alternate_allele, 1, 1) &
nchar(reference_allele) < nchar(alternate_allele) ~ 'insertion',
str_sub(reference_allele, 1, 1) == str_sub(alternate_allele, 1, 1) &
nchar(reference_allele) > nchar(alternate_allele) ~ 'deletion',
TRUE ~ 'snv'),
reference_allele = case_when(
variant_type == 'insertion' ~ '-',
variant_type == 'deletion' ~ str_replace(reference_allele, '(^[A-Z]{1})', ''),
TRUE ~ reference_allele
),
alternate_allele = case_when(
variant_type == 'insertion' ~ str_replace(alternate_allele, '(^[A-Z]{1})', ''),
variant_type == 'deletion' ~ '-',
TRUE ~ alternate_allele
),
end_position = case_when(
variant_type == 'snv' ~ start_position,
variant_type == 'insertion' ~ end_position + 1,
variant_type == 'deletion' ~ end_position),
start_position = case_when(
variant_type == 'deletion' ~ start_position + 1,
TRUE ~ start_position)
) %>%
dplyr::filter(start_position == start, end_position == end, reference_allele == ref, alternate_allele == alt) %>%
mutate(brca_exchange_enigma = str_trim(str_extract(pathogenicity, '[A-Za-z\\,\\ ]+(?=\\(ENIGMA\\))'), 'both'),
brca_exchange_clinvar = str_trim(str_extract(pathogenicity, '[A-Za-z\\,\\ \\_]+(?=\\(ClinVar\\))'), 'both')) %>%
select(brca_exchange_id = id, brca_exchange_enigma, brca_exchange_clinvar)
}
}
plan(multiprocess)
library(future)
plan(multiprocess)
#' @export
#' @rdname brca_exchange_annotate_maf
brca_annotate_maf = function(maf) {
plan(multiprocess)
mutate(maf, annot = future_pmap(list(Hugo_Symbol, Start_Position, End_Position, Reference_Allele, Alternate_Allele),
query_brca_exchange)) %>%
unnest(annot)
}
maf = brca_annotate_maf(maf)
#' @export
#' @rdname brca_exchange_annotate_maf
brca_annotate_maf = function(maf) {
plan(multiprocess)
mutate(maf, annot = pmap(list(Hugo_Symbol, Start_Position, End_Position, Reference_Allele, Alternate_Allele),
query_brca_exchange)) %>%
unnest(annot)
}
maf = brca_annotate_maf(maf)
brca_annotate_maf(h(maf))
#' @export
#' @rdname brca_exchange_annotate_maf
brca_annotate_maf = function(maf) {
plan(multiprocess)
mutate(maf, annot = future_pmap(list(Hugo_Symbol, Start_Position, End_Position, Reference_Allele, Alternate_Allele),
query_brca_exchange)) %>%
unnest(annot)
}
brca_annotate_maf(h(maf))
?plan
plan(multicore)
#' @export
#' @rdname brca_exchange_annotate_maf
brca_annotate_maf = function(maf) {
plan(multicore)
mutate(maf, annot = future_pmap(list(Hugo_Symbol, Start_Position, End_Position, Reference_Allele, Alternate_Allele),
query_brca_exchange)) %>%
unnest(annot)
}
brca_annotate_maf(h(maf))
tmp=brca_annotate_maf(maf)
dim(tmp)
dim(tmp)
tmp=brca_annotate_maf(maf)
maf
dim(maf)
#' @export
#' @rdname brca_exchange_annotate_maf
query_brca_exchange = function(gene, start, end, ref, alt) {
cat('.')
if (gene %in% c('BRCA1', 'BRCA2')) {
brca_query(gene, start-1, end+1) %>%
map_dfr(., ~set_names(., c('gene',
'chrom',
'start_position',
'end_position',
'reference_allele',
'alternate_allele',
'id',
'pathogenicity'))) %>%
dplyr::mutate(
start_position = as.numeric(start_position),
end_position = as.numeric(end_position),
variant_type = case_when(
str_sub(reference_allele, 1, 1) == str_sub(alternate_allele, 1, 1) &
nchar(reference_allele) < nchar(alternate_allele) ~ 'insertion',
str_sub(reference_allele, 1, 1) == str_sub(alternate_allele, 1, 1) &
nchar(reference_allele) > nchar(alternate_allele) ~ 'deletion',
TRUE ~ 'snv'),
reference_allele = case_when(
variant_type == 'insertion' ~ '-',
variant_type == 'deletion' ~ str_replace(reference_allele, '(^[A-Z]{1})', ''),
TRUE ~ reference_allele
),
alternate_allele = case_when(
variant_type == 'insertion' ~ str_replace(alternate_allele, '(^[A-Z]{1})', ''),
variant_type == 'deletion' ~ '-',
TRUE ~ alternate_allele
),
end_position = case_when(
variant_type == 'snv' ~ start_position,
variant_type == 'insertion' ~ end_position + 1,
variant_type == 'deletion' ~ end_position),
start_position = case_when(
variant_type == 'deletion' ~ start_position + 1,
TRUE ~ start_position)
) %>%
dplyr::filter(start_position == start, end_position == end, reference_allele == ref, alternate_allele == alt) %>%
mutate(brca_exchange_enigma = str_trim(str_extract(pathogenicity, '[A-Za-z\\,\\ ]+(?=\\(ENIGMA\\))'), 'both'),
brca_exchange_clinvar = str_trim(str_extract(pathogenicity, '[A-Za-z\\,\\ \\_]+(?=\\(ClinVar\\))'), 'both')) %>%
select(brca_exchange_id = id, brca_exchange_enigma, brca_exchange_clinvar)
}
}
#' @export
#' @rdname brca_exchange_annotate_maf
brca_annotate_maf = function(maf) {
plan(multicore)
mutate(maf, annot = pmap(list(Hugo_Symbol, Start_Position, End_Position, Reference_Allele, Alternate_Allele),
query_brca_exchange)) %>%
unnest(annot)
}
tmp=brca_annotate_maf(maf)
devtools::check()
query_brca_exchange('BRCA1', 43124027, 43124027, 'CT', '-')
#' @export
#' @rdname brca_exchange_annotate_maf
query_brca_exchange = function(gene, start, end, ref, alt) {
if (gene %in% c('BRCA1', 'BRCA2')) {
brca_query(gene, start-1, end+1) %>%
map_dfr(., ~set_names(., c('gene',
'chrom',
'start_position',
'end_position',
'reference_allele',
'alternate_allele',
'id',
'pathogenicity'))) %>%
dplyr::mutate(
start_position = as.numeric(start_position),
end_position = as.numeric(end_position),
variant_type = case_when(
str_sub(reference_allele, 1, 1) == str_sub(alternate_allele, 1, 1) &
nchar(reference_allele) < nchar(alternate_allele) ~ 'insertion',
str_sub(reference_allele, 1, 1) == str_sub(alternate_allele, 1, 1) &
nchar(reference_allele) > nchar(alternate_allele) ~ 'deletion',
TRUE ~ 'snv'),
reference_allele = case_when(
variant_type == 'insertion' ~ '-',
variant_type == 'deletion' ~ str_replace(reference_allele, '(^[A-Z]{1})', ''),
TRUE ~ reference_allele
),
alternate_allele = case_when(
variant_type == 'insertion' ~ str_replace(alternate_allele, '(^[A-Z]{1})', ''),
variant_type == 'deletion' ~ '-',
TRUE ~ alternate_allele
),
end_position = case_when(
variant_type == 'snv' ~ start_position,
variant_type == 'insertion' ~ end_position + 1,
variant_type == 'deletion' ~ end_position),
start_position = case_when(
variant_type == 'deletion' ~ start_position + 1,
TRUE ~ start_position)
) %>%
dplyr::filter(start_position == start, end_position == end, reference_allele == ref, alternate_allele == alt) %>%
mutate(brca_exchange_enigma = str_trim(str_extract(pathogenicity, '[A-Za-z\\,\\ ]+(?=\\(ENIGMA\\))'), 'both'),
brca_exchange_clinvar = str_trim(str_extract(pathogenicity, '[A-Za-z\\,\\ \\_]+(?=\\(ClinVar\\))'), 'both')) %>%
select(brca_exchange_id = id, brca_exchange_enigma, brca_exchange_clinvar)
}
}
query_brca_exchange('BRCA1', 43124027, 43124027, 'CT', '-')
query_brca_exchange('BRCA1', 43124027, 43124028, 'CT', '-')
gene='BRCA1'
filter(maf, Hugo_Symbol=='BRCA1', HGVSp_Short %like% 'E23') %>% h(1) %>% select(HGVSp_Short, matches('Position'))
start=41276045; end=41276046
brca_query(gene, start-1, end+1) %>%
map_dfr(., ~set_names(., c('gene',
'chrom',
'start_position',
'end_position',
'reference_allele',
'alternate_allele',
'id',
'pathogenicity')))
brca_query(gene, start-1, end+1) %>%
map_dfr(., ~set_names(., c('gene',
'chrom',
'start_position',
'end_position',
'reference_allele',
'alternate_allele',
'id',
'pathogenicity'))) %>%
dplyr::mutate(
start_position = as.numeric(start_position),
end_position = as.numeric(end_position),
variant_type = case_when(
str_sub(reference_allele, 1, 1) == str_sub(alternate_allele, 1, 1) &
nchar(reference_allele) < nchar(alternate_allele) ~ 'insertion',
str_sub(reference_allele, 1, 1) == str_sub(alternate_allele, 1, 1) &
nchar(reference_allele) > nchar(alternate_allele) ~ 'deletion',
TRUE ~ 'snv'),
reference_allele = case_when(
variant_type == 'insertion' ~ '-',
variant_type == 'deletion' ~ str_replace(reference_allele, '(^[A-Z]{1})', ''),
TRUE ~ reference_allele
),
alternate_allele = case_when(
variant_type == 'insertion' ~ str_replace(alternate_allele, '(^[A-Z]{1})', ''),
variant_type == 'deletion' ~ '-',
TRUE ~ alternate_allele
),
end_position = case_when(
variant_type == 'snv' ~ start_position,
variant_type == 'insertion' ~ end_position + 1,
variant_type == 'deletion' ~ end_position),
start_position = case_when(
variant_type == 'deletion' ~ start_position + 1,
TRUE ~ start_position)
)
brca_query(gene, start-1, end+1) %>%
map_dfr(., ~set_names(., c('gene',
'chrom',
'start_position',
'end_position',
'reference_allele',
'alternate_allele',
'id',
'pathogenicity'))) %>%
dplyr::mutate(
start_position = as.numeric(start_position),
end_position = as.numeric(end_position),
variant_type = case_when(
str_sub(reference_allele, 1, 1) == str_sub(alternate_allele, 1, 1) &
nchar(reference_allele) < nchar(alternate_allele) ~ 'insertion',
str_sub(reference_allele, 1, 1) == str_sub(alternate_allele, 1, 1) &
nchar(reference_allele) > nchar(alternate_allele) ~ 'deletion',
TRUE ~ 'snv'),
reference_allele = case_when(
variant_type == 'insertion' ~ '-',
variant_type == 'deletion' ~ str_replace(reference_allele, '(^[A-Z]{1})', ''),
TRUE ~ reference_allele
),
alternate_allele = case_when(
variant_type == 'insertion' ~ str_replace(alternate_allele, '(^[A-Z]{1})', ''),
variant_type == 'deletion' ~ '-',
TRUE ~ alternate_allele
),
end_position = case_when(
variant_type == 'snv' ~ start_position,
variant_type == 'insertion' ~ end_position + 1,
variant_type == 'deletion' ~ end_position),
start_position = case_when(
variant_type == 'deletion' ~ start_position + 1,
TRUE ~ start_position)
) %>%
dplyr::filter(start_position == start, end_position == end, reference_allele == ref, alternate_allele == alt) %>%
mutate(brca_exchange_enigma = str_trim(str_extract(pathogenicity, '[A-Za-z\\,\\ ]+(?=\\(ENIGMA\\))'), 'both'),
brca_exchange_clinvar = str_trim(str_extract(pathogenicity, '[A-Za-z\\,\\ \\_]+(?=\\(ClinVar\\))'), 'both')) %>%
select(brca_exchange_id = id, brca_exchange_enigma, brca_exchange_clinvar)
filter(maf, Hugo_Symbol=='BRCA1', HGVSp_Short %like% 'E23') %>% h(1) %>% select(HGVSp_Short, matches('Position|Allele'))
start=41276045; end=41276046;ref='CT', 'alt'='-'
start=41276045; end=41276046;ref='CT'; 'alt'='-'
brca_query(gene, start-1, end+1) %>%
map_dfr(., ~set_names(., c('gene',
'chrom',
'start_position',
'end_position',
'reference_allele',
'alternate_allele',
'id',
'pathogenicity'))) %>%
dplyr::mutate(
start_position = as.numeric(start_position),
end_position = as.numeric(end_position),
variant_type = case_when(
str_sub(reference_allele, 1, 1) == str_sub(alternate_allele, 1, 1) &
nchar(reference_allele) < nchar(alternate_allele) ~ 'insertion',
str_sub(reference_allele, 1, 1) == str_sub(alternate_allele, 1, 1) &
nchar(reference_allele) > nchar(alternate_allele) ~ 'deletion',
TRUE ~ 'snv'),
reference_allele = case_when(
variant_type == 'insertion' ~ '-',
variant_type == 'deletion' ~ str_replace(reference_allele, '(^[A-Z]{1})', ''),
TRUE ~ reference_allele
),
alternate_allele = case_when(
variant_type == 'insertion' ~ str_replace(alternate_allele, '(^[A-Z]{1})', ''),
variant_type == 'deletion' ~ '-',
TRUE ~ alternate_allele
),
end_position = case_when(
variant_type == 'snv' ~ start_position,
variant_type == 'insertion' ~ end_position + 1,
variant_type == 'deletion' ~ end_position),
start_position = case_when(
variant_type == 'deletion' ~ start_position + 1,
TRUE ~ start_position)
) %>%
dplyr::filter(start_position == start, end_position == end, reference_allele == ref, alternate_allele == alt) %>%
mutate(brca_exchange_enigma = str_trim(str_extract(pathogenicity, '[A-Za-z\\,\\ ]+(?=\\(ENIGMA\\))'), 'both'),
brca_exchange_clinvar = str_trim(str_extract(pathogenicity, '[A-Za-z\\,\\ \\_]+(?=\\(ClinVar\\))'), 'both')) %>%
select(brca_exchange_id = id, brca_exchange_enigma, brca_exchange_clinvar)
#' @export
#' @rdname brca_exchange_annotate_maf
query_brca_exchange = function(gene, start, end, ref, alt) {
if (gene %in% c('BRCA1', 'BRCA2')) {
brca_query(gene, start-1, end+1) %>%
map_dfr(., ~set_names(., c('gene',
'chrom',
'start_position',
'end_position',
'reference_allele',
'alternate_allele',
'id',
'pathogenicity'))) %>%
dplyr::mutate(
start_position = as.numeric(start_position),
end_position = as.numeric(end_position),
variant_type = case_when(
str_sub(reference_allele, 1, 1) == str_sub(alternate_allele, 1, 1) &
nchar(reference_allele) < nchar(alternate_allele) ~ 'insertion',
str_sub(reference_allele, 1, 1) == str_sub(alternate_allele, 1, 1) &
nchar(reference_allele) > nchar(alternate_allele) ~ 'deletion',
TRUE ~ 'snv'),
reference_allele = case_when(
variant_type == 'insertion' ~ '-',
variant_type == 'deletion' ~ str_replace(reference_allele, '(^[A-Z]{1})', ''),
TRUE ~ reference_allele
),
alternate_allele = case_when(
variant_type == 'insertion' ~ str_replace(alternate_allele, '(^[A-Z]{1})', ''),
variant_type == 'deletion' ~ '-',
TRUE ~ alternate_allele
),
end_position = case_when(
variant_type == 'snv' ~ start_position,
variant_type == 'insertion' ~ end_position + 1,
variant_type == 'deletion' ~ end_position),
start_position = case_when(
variant_type == 'deletion' ~ start_position + 1,
TRUE ~ start_position)
) %>%
dplyr::filter(start_position == start, end_position == end, reference_allele == ref, alternate_allele == alt) %>%
mutate(brca_exchange_enigma = str_trim(str_extract(pathogenicity, '[A-Za-z\\,\\ ]+(?=\\(ENIGMA\\))'), 'both'),
brca_exchange_clinvar = str_trim(str_extract(pathogenicity, '[A-Za-z\\,\\ \\_]+(?=\\(ClinVar\\))'), 'both')) %>%
select(brca_exchange_id = id, brca_exchange_enigma, brca_exchange_clinvar)
}
}
start=41276045; end=41276046;ref='CT'; 'alt'='-'
query_brca_exchange('BRCA1', 41276045, 41276046, 'CT', '-')
query_brca_exchange('BRCA1', 41276045, 41276040, 'CT', '-')
query_brca_exchange('BRCA1', 41276045, 41276045, 'CT', '-')
?stopifnot
?stop
